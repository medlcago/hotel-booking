volumes:
  dev_postgres_data:
  dev_prometheus_data:
  dev_grafana_data:
  dev_redis_data:
  dev_redis-insight:


services:
  hotel_booking:
    container_name: hotel_booking
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8000"
    command: sh -c "poetry run alembic upgrade head & poetry run python ./src/main.py"
    depends_on:
      - database
      - redis
    restart: always

  database:
    container_name: postgres
    image: postgres:latest
    restart: always
    env_file:
      - .env.dev
    environment:
      POSTGRES_USER: ${DB__USER}
      POSTGRES_PASSWORD: ${DB__PASSWORD}
      POSTGRES_DB: ${DB__NAME}
    volumes:
      - dev_postgres_data:/var/lib/postgresql/data/
    ports:
      - "5434:5432"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./infra/prometheus/:/etc/prometheus/
      - dev_prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    restart: always

  grafana:
    image: grafana/grafana:11.2.4
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - dev_grafana_data:/var/lib/grafana
    env_file:
      - ./infra/grafana/config.monitoring
    restart: always

  nginx:
    container_name: nginx
    build:
      context: ./infra/nginx
      dockerfile: ./Dockerfile
    ports:
      - "80:80"
    depends_on:
      - hotel_booking
    restart: always

  redis:
    container_name: redis
    image: redis:latest
    restart: always
    ports:
      - "6380:6379"
    volumes:
      - dev_redis_data:/data

  redis-insight:
    container_name: redis-ui
    image: redis/redisinsight:latest
    restart: always
    ports:
      - "5540:5540"
    volumes:
      - dev_redis-insight:/data

  celery_worker:
    container_name: celery_worker
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "poetry run celery -A src.tasks worker --loglevel=info"
    depends_on:
      - hotel_booking
      - redis
    restart: always

  flower:
    container_name: flower
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "poetry run celery -A src.tasks flower --loglevel=info"
    ports:
      - "5557:5555"
    depends_on:
      - hotel_booking
      - redis
      - celery_worker
    restart: always